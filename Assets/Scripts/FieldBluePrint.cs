using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

namespace RandomDungeonWithBluePrint
{
    [CreateAssetMenu(menuName = "ScriptableObject/FieldBluePrint")]
    public class FieldBluePrint : ScriptableObject
    {
        [Serializable]
        public class Section
        {
            [SerializeField] private int index = default;
            [SerializeField] private bool roomIndispensable = default;
            [SerializeField] private int makeRoomWeight = default;
            [SerializeField] private RectInt rect = default;
            [SerializeField] private Vector2Int minRoomSize = default;

            public int Index => index;
            public bool RoomIndispensable => roomIndispensable;
            public int MakeRoomWeight => makeRoomWeight;
            public RectInt Rect => rect;
            public Vector2Int MinRoomSize => minRoomSize;
            public int Width => rect.width;
            public int Height => rect.height;

            public int AdjoiningWithDirection(Section other)
            {
                return rect.AdjoiningWithDirection(other.Rect);
            }

            public Vector2Int GetEdge(Section other, Vector2Int initial = default)
            {
                return rect.GetEdge(AdjoiningWithDirection(other), initial);
            }
        }

        [Serializable]
        public class Connection
        {
            [SerializeField] private int fromIndex = default;
            [SerializeField] private int toIndex = default;

            public int From => fromIndex;
            public int To => toIndex;
        }

        [SerializeField, Header("盤面の広さ")] private Vector2Int size = default;
        [SerializeField, Header("部屋を作る数の振れ幅")] private int minRoomNum = default;
        [SerializeField] private int maxRoomNum = default;
        [SerializeField, Header("ランダムに道を生成する数の振れ幅")] private int minRandomBranchNum = default;
        [SerializeField] private int maxRandomBranchNum = default;
        [SerializeField, Header("初期コネクションを自動生成するかどうか")] private bool autoGenerateDefaultConnections = default;
        [SerializeField, Header("区画")] private List<Section> sections = default;
        [SerializeField, Header("区画間の繋がり")] private List<Connection> connections = default;

        public Vector2Int Size => size;
        public int MinRoomNum => minRoomNum;
        public int MaxRoomNum => maxRoomNum;
        public int MinRandomBranchNum => minRandomBranchNum;
        public int MaxRandomBranchNum => maxRandomBranchNum;
        public bool AutoGenerateDefaultConnections => autoGenerateDefaultConnections;
        public List<Section> Sections => sections.ToList();
        public List<Connection> Connections => connections.ToList();
    }
}
